$date
	Thu Oct 27 10:17:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb_b $end
$var wire 16 ! out [15:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # a1 [3:0] $end
$var reg 4 $ a2 [3:0] $end
$var reg 4 % a3 [3:0] $end
$var reg 4 & b [3:0] $end
$var reg 4 ' b1 [3:0] $end
$var reg 4 ( b2 [3:0] $end
$var reg 4 ) b3 [3:0] $end
$var reg 16 * c [15:0] $end
$var reg 1 + clk $end
$var reg 16 , expected_out [15:0] $end
$var integer 32 - i [31:0] $end
$var integer 32 . w_dec [31:0] $end
$var integer 32 / w_file [31:0] $end
$var integer 32 0 w_scan_file [31:0] $end
$var integer 32 1 x_dec [31:0] $end
$var integer 32 2 x_file [31:0] $end
$var integer 32 3 x_scan_file [31:0] $end
$scope function mac_predicted $end
$var reg 4 4 a [3:0] $end
$var reg 4 5 a1 [3:0] $end
$var reg 4 6 a2 [3:0] $end
$var reg 4 7 a3 [3:0] $end
$var reg 4 8 b [3:0] $end
$var reg 4 9 b1 [3:0] $end
$var reg 4 : b2 [3:0] $end
$var reg 4 ; b3 [3:0] $end
$var reg 16 < c [15:0] $end
$var reg 16 = mac_predicted [15:0] $end
$var reg 8 > psum1 [7:0] $end
$var reg 8 ? psum2 [7:0] $end
$upscope $end
$scope function w_bin $end
$var reg 4 @ w_bin [3:0] $end
$var integer 32 A weight [31:0] $end
$upscope $end
$scope function x_bin $end
$var reg 4 B x_bin [3:0] $end
$var integer 32 C x [31:0] $end
$upscope $end
$scope module mac_wrapper_b_instance $end
$var wire 4 D a [3:0] $end
$var wire 4 E a1 [3:0] $end
$var wire 4 F a2 [3:0] $end
$var wire 4 G a3 [3:0] $end
$var wire 4 H b [3:0] $end
$var wire 4 I b1 [3:0] $end
$var wire 4 J b2 [3:0] $end
$var wire 4 K b3 [3:0] $end
$var wire 16 L c [15:0] $end
$var wire 1 + clk $end
$var wire 16 M out1 [15:0] $end
$var wire 16 N out0 [15:0] $end
$var wire 16 O out [15:0] $end
$var wire 16 P c1 [15:0] $end
$var wire 16 Q c0 [15:0] $end
$var reg 4 R a1_q [3:0] $end
$var reg 4 S a2_q [3:0] $end
$var reg 4 T a3_q [3:0] $end
$var reg 4 U a_q [3:0] $end
$var reg 4 V b1_q [3:0] $end
$var reg 4 W b2_q [3:0] $end
$var reg 4 X b3_q [3:0] $end
$var reg 4 Y b_q [3:0] $end
$var reg 16 Z c_q [15:0] $end
$scope module mac_instance_0 $end
$var wire 4 [ a [3:0] $end
$var wire 4 \ b [3:0] $end
$var wire 16 ] c [15:0] $end
$var wire 1 ^ clk $end
$var wire 8 _ product [7:0] $end
$var wire 16 ` out [15:0] $end
$upscope $end
$scope module mac_instance_1 $end
$var wire 4 a a [3:0] $end
$var wire 4 b b [3:0] $end
$var wire 16 c c [15:0] $end
$var wire 1 d clk $end
$var wire 8 e product [7:0] $end
$var wire 16 f out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx f
bx e
zd
bx c
bx b
bx a
bx `
bx _
z^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b10000000000000000000000000000100 2
bx 1
bx 0
b10000000000000000000000000000011 /
bx .
bx -
b0 ,
0+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#2
1+
#3
b0 -
0+
#4
1+
#5
b1 -
b1111111111010000 ,
b1111111111010000 =
b11111011 ?
b11010101 >
b110 4
b1 8
b0 <
b111 5
b1001 9
b1 6
b111 :
b11 7
b1100 ;
b1100 )
b1100 K
b11 %
b11 G
b111 (
b111 J
b1 $
b1 F
b1001 '
b1001 I
b111 #
b111 E
b0 *
b0 L
b1 &
b1 H
b1100 @
b0 A
b110 "
b110 D
b11 B
b11 C
b1 3
b11 1
b1 0
b11111111111111111111111111111100 .
0+
#6
b1111111111010000 !
b1111111111010000 O
b1111111111111011 M
b1111111111111011 f
b1111111111110100 P
b1111111111110100 c
b11 T
b1100 X
b111 e
b1 S
b1 a
b111 W
b111 b
b1111111111010101 N
b1111111111010101 `
b1111111111001111 Q
b1111111111001111 ]
b111 R
b1001 V
b0 Z
b110 _
b110 U
b110 [
b1 Y
b1 \
1+
#7
b10 -
b1111111110011110 ,
b1111111110011110 =
b11011000 ?
b11110110 >
b10 4
b1101 8
b1111111111010000 <
b10 5
b1110 9
b1111 6
b1100 :
b100 7
b101 ;
b101 )
b101 K
b100 %
b100 G
b1100 (
b1100 J
b1111 $
b1111 F
b1110 '
b1110 I
b10 #
b10 E
b1111111111010000 *
b1111111111010000 L
b1101 &
b1101 H
b101 @
b1 A
b10 "
b10 D
b100 B
b100 C
b100 1
b101 .
0+
#8
b100 T
b10100 P
b10100 c
b101 X
b1111 S
b1111 a
b1111111111011000 M
b1111111111011000 f
b11000100 e
b1100 W
b1100 b
b10 R
b1111111111111100 Q
b1111111111111100 ]
b1110 V
b1111111111010000 Z
b10 U
b10 [
b1111111110011110 !
b1111111110011110 O
b1111111111110110 N
b1111111111110110 `
b11111010 _
b1101 Y
b1101 \
1+
#9
b11 -
b1111111110000110 ,
b1111111110000110 =
b11111100 ?
b11101100 >
b110 4
b1010 8
b1111111110011110 <
b100 5
b100 9
b0 6
b10 :
b10 7
b1110 ;
b1110 )
b1110 K
b10 %
b10 G
b10 (
b10 J
b0 $
b0 F
b100 '
b100 I
b100 #
b100 E
b1111111110011110 *
b1111111110011110 L
b1010 &
b1010 H
b1110 @
b0 A
b110 "
b110 D
b10 B
b10 C
b10 1
b11111111111111111111111111111110 .
0+
#10
b10 T
b1111111111111100 P
b1111111111111100 c
b1110 X
b0 S
b0 a
b1111111111111100 M
b1111111111111100 f
b0 e
b10 W
b10 b
b100 R
b10000 Q
b10000 ]
b100 V
b1111111110011110 Z
b110 U
b110 [
b1111111110000110 !
b1111111110000110 O
b1111111111101100 N
b1111111111101100 `
b11011100 _
b1010 Y
b1010 \
1+
#11
b100 -
b1111111101011001 ,
b1111111101011001 =
b11111011 ?
b11011000 >
b1 4
b0 8
b1111111110000110 <
b1010 5
b1100 9
b10 6
b11 :
b1011 7
b1111 ;
b1111 )
b1111 K
b1011 %
b1011 G
b11 (
b11 J
b10 $
b10 F
b1100 '
b1100 I
b1 A
b1010 #
b1010 E
b1111111110000110 *
b1111111110000110 L
b0 &
b0 H
b1111 @
b1 "
b1 D
b1011 B
b1011 C
b1011 1
b11111111111111111111111111111111 .
0+
#12
b1011 T
b1111111111110101 P
b1111111111110101 c
b1111 X
b1111111111111011 M
b1111111111111011 f
b110 e
b10 S
b10 a
b11 W
b11 b
b1010 R
b1111111111011000 Q
b1111111111011000 ]
b1100 V
b1111111110000110 Z
b1 U
b1 [
b1111111101011001 !
b1111111101011001 O
b1111111111011000 N
b1111111111011000 `
b0 _
b0 Y
b0 \
1+
#13
b101 -
b1111111101111111 ,
b1111111101111111 =
b10000 ?
b10110 >
b10 4
b1100 8
b1111111101011001 <
b110 5
b101 9
b100 6
b1010 :
b1010 7
b100 ;
b100 )
b100 K
b1010 %
b1010 G
b1010 (
b1010 J
b100 $
b100 F
b101 '
b101 I
b110 #
b110 E
b1111111101011001 *
b1111111101011001 L
b1100 &
b1100 H
b100 @
b0 A
b10 "
b10 D
b1010 B
b1010 C
b1010 1
b100 .
0+
#14
b1010 T
b101000 P
b101000 c
b100 X
b100 S
b100 a
b10000 M
b10000 f
b11101000 e
b1010 W
b1010 b
b110 R
b11110 Q
b11110 ]
b101 V
b1111111101011001 Z
b10 U
b10 [
b1111111101111111 !
b1111111101111111 O
b10110 N
b10110 `
b11111000 _
b1100 Y
b1100 \
1+
#15
b110 -
b11111 ,
b11111 =
b1010000 ?
b1010000 >
b1010 4
b100 8
b1111111101111111 <
b1010 5
b100 9
b1010 6
b100 :
b100 (
b100 J
b1010 $
b1010 F
b100 '
b100 I
b1010 #
b1010 E
b1111111101111111 *
b1111111101111111 L
b100 &
b100 H
b0 A
b1010 "
b1010 D
b11111111111111111111111111111111 3
b11111111111111111111111111111111 0
0+
#16
b1010 S
b1010 a
b1010000 M
b1010000 f
b101000 e
b100 W
b100 b
b1010 R
b101000 Q
b101000 ]
b100 V
b1111111101111111 Z
b1010 U
b1010 [
b11111 !
b11111 O
b1010000 N
b1010000 `
b101000 _
b100 Y
b100 \
1+
#17
b111 -
b10111111 ,
b10111111 =
b11111 <
b11111 *
b11111 L
b0 A
0+
#18
b10111111 !
b10111111 O
b11111 Z
1+
#19
b1000 -
b101011111 ,
b101011111 =
b10111111 <
b10111111 *
b10111111 L
b0 A
0+
#20
b101011111 !
b101011111 O
b10111111 Z
1+
#21
b1001 -
b111111111 ,
b111111111 =
b101011111 <
b101011111 *
b101011111 L
b0 A
0+
#22
b111111111 !
b111111111 O
b101011111 Z
1+
#23
b1010 -
b1010011111 ,
b1010011111 =
b111111111 <
b111111111 *
b111111111 L
b0 A
0+
#24
b1010011111 !
b1010011111 O
b111111111 Z
1+
#25
b1011 -
b1100111111 ,
b1100111111 =
b1010011111 <
b1010011111 *
b1010011111 L
b0 A
0+
#26
b1100111111 !
b1100111111 O
b1010011111 Z
1+
#27
b1100 -
b1111011111 ,
b1111011111 =
b1100111111 <
b1100111111 *
b1100111111 L
b0 A
0+
#28
b1111011111 !
b1111011111 O
b1100111111 Z
1+
#29
b1101 -
b10001111111 ,
b10001111111 =
b1111011111 <
b1111011111 *
b1111011111 L
b0 A
0+
#30
b10001111111 !
b10001111111 O
b1111011111 Z
1+
#31
b1110 -
b10100011111 ,
b10100011111 =
b10001111111 <
b10001111111 *
b10001111111 L
b0 A
0+
#32
b10100011111 !
b10100011111 O
b10001111111 Z
1+
#33
b1111 -
b10110111111 ,
b10110111111 =
b10100011111 <
b10100011111 *
b10100011111 L
b0 A
0+
#34
b10110111111 !
b10110111111 O
b10100011111 Z
1+
#35
b10000 -
b11001011111 ,
b11001011111 =
b10110111111 <
b10110111111 *
b10110111111 L
b0 A
0+
#36
b11001011111 !
b11001011111 O
b10110111111 Z
1+
#37
b10001 -
b11011111111 ,
b11011111111 =
b11001011111 <
b11001011111 *
b11001011111 L
b0 A
0+
#38
b11011111111 !
b11011111111 O
b11001011111 Z
1+
#39
b10010 -
b11110011111 ,
b11110011111 =
b11011111111 <
b11011111111 *
b11011111111 L
b0 A
0+
#40
b11110011111 !
b11110011111 O
b11011111111 Z
1+
#41
b10011 -
b100000111111 ,
b100000111111 =
b11110011111 <
b11110011111 *
b11110011111 L
b0 A
0+
#42
b100000111111 !
b100000111111 O
b11110011111 Z
1+
#43
b10100 -
b100011011111 ,
b100011011111 =
b100000111111 <
b100000111111 *
b100000111111 L
b0 A
0+
#44
b100011011111 !
b100011011111 O
b100000111111 Z
1+
#45
0+
#55
